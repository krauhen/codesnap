stages:
  - lint
  - test
  - build
  - publish

variables:
  UV_CACHE_DIR: "$CI_PROJECT_DIR/.uv-cache"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

cache:
  paths:
    - .uv-cache/
    - .pip-cache/

lint:
  stage: lint
  image: python:3.13
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH =~ /^release\/\d+\.x$/'
  script:
    - pip install uv
    - uv sync --dev
    - uv run ruff check .

test:
  stage: test
  image: python:3.13
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH =~ /^release\/\d+\.x$/'
  script:
    - pip install uv
    - uv sync --dev
    - uv run pytest

build:
  stage: build
  image: python:3.13
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - pip install uv
    - uv build
  artifacts:
    paths:
      - dist/

publish_testpypi:
  stage: publish
  image: python:3.13
  needs: [ "build" ]
  rules:
    - if: '$CI_COMMIT_TAG =~ /-test$/'
  script:
    - pip install uv
    - uv add --dev twine
    - export TWINE_USERNAME="__token__"
    - export TWINE_PASSWORD="$TWINE_PASSWORD_TESTPYPI"
    - uv run twine upload --non-interactive --repository-url https://test.pypi.org/legacy/ dist/*

publish_pypi:
  stage: publish
  image: python:3.13
  needs: [ "build" ]
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /-test$/'
  script:
    - pip install uv
    - uv add --dev twine
    - export TWINE_USERNAME="__token__"
    - export TWINE_PASSWORD="$TWINE_PASSWORD_PYPI"
    - uv run twine upload --non-interactive dist/*